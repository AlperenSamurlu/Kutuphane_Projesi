<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABgAAACUAAABkAAAAsQAAAKEAAABRAAAAGgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AA4AAAAkAAAASAAAAHwAAAC1AAAA3AAAANYAAACcAAAAqgAAAN0AAADVAAAApwAAAG4AAAA+AAAAHQAA
        AAoAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAA6AAAAWAAAAF0AAABpAAAAewAA
        AJIAAACuAAAAyAAAANsAAADcAAAAwgAAAI4AAABOAAAAJgAAADwAAAAzAAAAKwAAAF4AAACdAAAAywAA
        AN4AAADYAAAAwgAAAKcAAACMAAAAdgAAAGYAAABbAAAAVgAAACgAAAAAAAAABQAAAK4AAADsAAAAzgAA
        AMcAAAC7AAAAqAAAAI0AAABpAAAAQwAAACIAAAATAAAAJgAAAGUAAAC3AAAA8AAAAOYAAACjAAAAUQAA
        AB0AAAAUAAAAKQAAAE0AAABzAAAAlAAAAK4AAAC/AAAAyQAAANEAAAD0AAAAeAAAAAAAAAAFAAAAtAAA
        AJYAAAARAAAAEwAAAA8AAAAQAAAAFwAAACsAAABOAAAAgQAAALkAAADeAAAA1AAAAJgAAADVAAAAugAA
        AKYAAADdAAAA2AAAAKsAAABzAAAARAAAACQAAAAUAAAADwAAABAAAAAUAAAAGwAAAMQAAAB8AAAAAAAA
        AAUAAAC0AAAAigAAACkAAACwAAAAvgAAAMgAAADVAAAA3QAAANgAAAC9AAAAiwAAAE4AAAAZAAAACAAA
        ALsAAACFAAAAAQAAACUAAABeAAAAmgAAAMYAAADbAAAA3AAAANIAAADFAAAAvQAAAJoAAAAYAAAAvgAA
        AH0AAAAAAAAABQAAALQAAACJAAAAPAAAAOoAAACLAAAAZAAAAFEAAAA3AAAAHQAAAAkAAAAAAAAAAAAA
        AAAAAAAHAAAAuwAAAIUAAAAAAAAAAAAAAAAAAAABAAAADQAAACMAAAA+AAAAVwAAAGgAAACoAAAA1gAA
        AB8AAAC+AAAAfQAAAAAAAAAFAAAAtAAAAIkAAAA8AAAA3wAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAcAAAC7AAAAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AF0AAADUAAAAHwAAAL4AAAB9AAAAAAAAAAUAAAC0AAAAiQAAADwAAADfAAAAKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAALsAAACFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXQAAANQAAAAfAAAAvgAAAH0AAAAAAAAABQAAALQAAACJAAAAPAAAAN8AAAArAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAuwAAAIUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA1AAAAB8AAAC+AAAAfQAAAAAAAAAFAAAAtAAAAIkAAAA8AAAA3wAA
        ACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAC7AAAAhQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADUAAAAHwAAAL4AAAB9AAAAAAAAAAUAAAC0AAAAiQAA
        ADwAAADfAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAALsAAACFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANQAAAAfAAAAvgAAAH0AAAAAAAAABQAA
        ALQAAACJAAAAPAAAAN8AAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAuwAA
        AIUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA1AAAAB8AAAC+AAAAfQAA
        AAAAAAAFAAAAtAAAAIkAAAA8AAAA3wAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAcAAAC7AAAAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADUAAAAHwAA
        AL4AAAB9AAAAAAAAAAUAAAC0AAAAiQAAADwAAADfAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABwAAALsAAACFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAA
        ANQAAAAfAAAAvgAAAH0AAAAAAAAABQAAALQAAACJAAAAPAAAAN8AAAArAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAHAAAAuwAAAIUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABdAAAA1AAAAB8AAAC+AAAAfQAAAAAAAAAFAAAAtAAAAIkAAAA8AAAA3wAAACsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAC7AAAAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAF0AAADUAAAAHwAAAL4AAAB9AAAAAAAAAAUAAAC0AAAAiQAAADwAAADfAAAAKwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAAALsAAACFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANQAAAAfAAAAvgAAAH0AAAAAAAAABQAAALQAAACJAAAAPAAA
        AN8AAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAuwAAAIUAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA1AAAAB8AAAC+AAAAfQAAAAAAAAAFAAAAtAAA
        AIkAAAA8AAAA3wAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAC7AAAAhQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF0AAADUAAAAHwAAAL4AAAB9AAAAAAAA
        AAUAAAC0AAAAiQAAADwAAADfAAAAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        ALsAAACFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANQAAAAfAAAAvgAA
        AH0AAAAAAAAABQAAALQAAACJAAAAPAAAAN8AAAArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAHAAAAuwAAAIUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdAAAA1AAA
        AB8AAAC+AAAAfQAAAAAAAAAFAAAAtAAAAIkAAAA8AAAA3wAAACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAcAAAC7AAAAhQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AF0AAADUAAAAHwAAAL4AAAB9AAAAAAAAAAUAAACyAAAAhwAAADwAAADfAAAAKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAMYAAACUAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAXQAAANQAAAAfAAAAuwAAAHsAAAAAAAAAAgAAADkAAAApAAAAPgAAAN8AAAArAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAANAAAAMgAAAHYAAADEAAAA6QAAAOUAAACyAAAAYwAAACYAAAAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABdAAAA1QAAABkAAAA7AAAAKAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAA4AAA
        ADoAAAAWAAAAJwAAAD8AAABkAAAAlQAAAMcAAADkAAAA0gAAAIwAAAA6AAAASgAAAKIAAADcAAAA4AAA
        ALsAAACHAAAAWQAAADgAAAAiAAAAEgAAAGgAAADVAAAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AD4AAADxAAAA2QAAANgAAADiAAAA5QAAANoAAAC7AAAAhwAAAEgAAAAWAAAAAQAAAAAAAAAAAAAAAwAA
        ACEAAABYAAAAlgAAAMUAAADfAAAA5QAAAOAAAADVAAAA4wAAANcAAAAXAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAHAAAAHAAAABzAAAAZgAAAFAAAAA2AAAAHAAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAADAAAACIAAAA9AAAAVgAAAGoAAAB1AAAAYgAAAAoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////+f///8A///gAAfwAAAAEAAAABAAAAAQAAAAEAHHABA/x/wQP8
        f8ED/H/BA/x/wQP8f8ED/H/BA/x/wQP8f8ED/H/BA/x/wQP8f8ED/H/BA/x/wQP8f8ED/H/BA/x/wQP8
        P8ED4AfB4AAAB+ABgAfgH/AH//////////8=
</value>
  </data>
</root>